#!/usr/bin/env bash

set -euo pipefail

__FILENAME=$(realpath "$0")
__DIRNAME=$(dirname "$__FILENAME")

# shellcheck source=./utilities
source "$__DIRNAME/utilities"

main () {
  export STAGE_NAME='test'
  export DEPENDS_ON='build'

  pipeline build.yml
  pipeline lint.yml

  # Explicitly set maxWorkers; jest determines the max to be 1 which has a lot of
  # surprising side effects (like causing nock to disable the network in
  # integration tests)
  CMD='npm test -- --selectProjects "Unit Tests" --maxWorkers 2' \
    LABEL=":jest: Jest (Unit Tests)" \
    CHECK_RUN_REPORTER_LABEL="Jest (Unit Tests)" \
    KEY=test-unit \
    pipeline test.yml

  CMD='scripts/test-dredd' \
    DEPENDS_ON="$DEPENDS_ON, sam-deploy" \
    LABEL=":cloudformation: Contract Tests" \
    CHECK_RUN_REPORTER_LABEL="Contract Tests" \
    KEY=test-contract \
    pipeline test.yml

  DESTROY_DEPENDS_ON='test-contract' \
    pipeline stack-test.yml

  DEPENDS_ON="$DEPENDS_ON, lint, test-contract, test-unit" \
    pipeline process-reports.yml

  DOMAIN_NAME="beacon.codelikeacarpenter.com" \
    DEPENDS_ON="$DEPENDS_ON, process-reports" \
    STACK_NAME='beacon' \
    STAGE_NAME='production' \
    ZONE_DOMAIN_NAME="beacon.codelikeacarpenter.com" \
    SETUP_DOMAINS=yes \
    pipeline stack-production.yml
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main
fi
